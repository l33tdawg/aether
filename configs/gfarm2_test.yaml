flow:
  - node: FileReaderNode
  - node: StaticAnalysisNode
  - node: LLMAnalysisNode
  - node: AnalyzerNode
  - node: SeedGeneratorNode
  - node: AetherFuzzRunner
  - node: ReportNode

tools:
  - name: aetherfuzz
    type: dynamic_validation
    enabled: true
    config:
      max_runs: 5000
      timeout: 600
      fork_enabled: false  # Disable fork for ABI-level fuzzing
      target_contract: "0x831091da075665168e01898c6dac004a867f1e1b"
      rpc_url: "https://eth-mainnet.public.blastapi.io"

  - name: slither
    type: static_analysis
    output_format: json
    enabled: true
    config:
      exclude_dependencies: true
      exclude_informational: true
      timeout: 300

  - name: mythril
    type: symbolic_execution
    enabled: true
    config:
      solc_json: true
      output: json
      timeout: 300

  - name: llm_gpt
    type: reasoning
    enabled: true
    model: gpt-5
    config:
      temperature: 0.3
      max_tokens: 1000
      system_prompt: |
        You are an expert smart contract security auditor analyzing the GFARM2 token contract.
        Focus on ERC20 token vulnerabilities including:
        1. Reentrancy attacks on transfer/approve functions
        2. Integer overflow/underflow issues
        3. Access control problems
        4. Gas optimization opportunities
        5. Front-running vulnerabilities in permit functions
        6. Flash loan attack vectors
        7. Oracle manipulation if applicable
        Provide specific line numbers and detailed explanations for GFARM2.


node_configs:
  FileReaderNode:
    include_line_numbers: true
    extract_metadata: true

  StaticAnalysisNode:
    tools: [slither, mythril]
    severity_threshold: medium
    output_format: structured

  AnalyzerNode:
    contract_analysis: true
    function_detection: true
    state_variable_analysis: true

  SeedGeneratorNode:
    seed_types: [fuzz, edge_case, exploit]
    max_seed_count: 100
    include_abi: true

  AetherFuzzRunner:
    max_runs: 5000
    timeout: 600
    coverage_enabled: true
    exploit_validation: true
    target_contract: "0x831091da075665168e01898c6dac004a867f1e1b"

  LLMAnalysisNode:
    analysis_types: [vulnerability_detection, gas_optimization, access_control, reentrancy, oracle_manipulation]
    confidence_threshold: 0.7
    focus_areas: [erc20_tokens, defi_tokens, gtoken_wrappers]

  ReportNode:
    format: markdown
    include_details: true
    output_sections: [summary, vulnerabilities, fixes, recommendations, fuzz_results]
